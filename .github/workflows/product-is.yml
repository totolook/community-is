name: product-is-builder

on:
 push:
  tags:
      - '*'


env:
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.class=standard -Dmaven.wagon.http.retryHandler.count=3


jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      IMG_NAME: public/wso2is
      TAG: ${{ github.ref_name }}

    steps:
      - name: Clone the repo
        uses: actions/checkout@v3
      - name: Clone the Product is from WSO2
        uses: actions/checkout@v3
        with:
          repository: wso2/product-is
          path: wso2is
          ref: ${{env.TAG}}
      - name: Set up Adopt JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"
    
      - name: Restore Maven cache
        continue-on-error: true
        uses: skjolber/maven-cache-github-action@v1
        with:
          step: restore

      - name: Product-IS build with JDK 11 without Integration Tests
        run: |
          mvn clean install -f wso2is --batch-mode -Dmaven.test.skip=true | tee mvn-build.log
      - name: get version from maven
        run: |
          echo "WSO2_VERSION=$(mvn help:evaluate -f wso2is -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
      - name: Save Maven cache
        uses: skjolber/maven-cache-github-action@v1
        continue-on-error: true
        with:
          step: save
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
            name: wso2is-${{env.TAG}}
            path: wso2is/modules/distribution/target/wso2is-${{ env.WSO2_VERSION }}.zip
      - name: Prepare docker build
        run: |
          cp wso2is/modules/distribution/target/wso2is-${{ env.WSO2_VERSION }}.zip docker/
      
      - name: Docker metadata
        id: metadata
        uses: docker/metadata-action@v3
        with:
            images: ${{ env.IMG_NAME }}
            tags: |
              type=semver,pattern={{version}}
              type=semver,pattern={{major}}.{{minor}}
              type=raw,value={{sha}},enable=${{ github.ref_type != 'tag' }}
      - name: Login to Registry
        uses: docker/login-action@v2
        with:
            registry: ${{ vars.REGISTRY }}
            username: ${{ secrets.PH_USER }}
            password: ${{ secrets.PH_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: docker
          file: docker/Dockerfile.ubuntu
          # push: ${{ github.event.base_ref =='refs/heads/main' && github.ref_type == 'tag' && !startsWith(github.ref, 'refs/tags/v0.')}}
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
      